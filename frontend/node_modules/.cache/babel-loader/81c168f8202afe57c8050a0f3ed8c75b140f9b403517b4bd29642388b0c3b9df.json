{"ast":null,"code":"var _jsxFileName = \"C:\\\\eye\\\\frontend\\\\src\\\\components\\\\classification\\\\OCTClassifier.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { classifyImage } from '../../utils/api';\nimport GradCAMVisualization from './GradCAMVisualization'; // Updated import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCTClassifier = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedModel, setSelectedModel] = useState('mobilenet_v3');\n  const models = ['mobilenet_v3', 'efficientnet_b0', 'squeezenet1_1', 'resnet50', 'resnet18', 'mobilevit'];\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setPreview(URL.createObjectURL(file));\n      setError(null);\n      try {\n        setLoading(true);\n        const response = await classifyImage(file, selectedModel);\n        setResult(response);\n        setError(null);\n      } catch (err) {\n        setError(err.message || 'Error processing image');\n        setResult(null);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"OCT Image Classification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedModel,\n        onChange: e => setSelectedModel(e.target.value),\n        className: \"block w-full p-2 mb-4 border rounded\",\n        children: models.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: model,\n          children: model\n        }, model, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        className: \"hidden\",\n        id: \"file-upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"cursor-pointer bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-blue-500\",\n      children: \"Processing image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold\",\n        children: \"Original Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Preview\",\n        className: \"max-w-md rounded shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold\",\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Class: \", result.class]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Confidence: \", result.confidence.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), result.accuracy && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Model Accuracy: \", result.accuracy.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), result.gradcam && /*#__PURE__*/_jsxDEV(GradCAMVisualization, {\n        original: preview,\n        gradcam: result.gradcam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(OCTClassifier, \"h8GXipcHG/RgpCx8/dDMi4+R1kk=\");\n_c = OCTClassifier;\nexport default OCTClassifier;\nvar _c;\n$RefreshReg$(_c, \"OCTClassifier\");","map":{"version":3,"names":["React","useState","classifyImage","GradCAMVisualization","jsxDEV","_jsxDEV","OCTClassifier","_s","selectedFile","setSelectedFile","preview","setPreview","result","setResult","loading","setLoading","error","setError","selectedModel","setSelectedModel","models","handleImageUpload","event","file","target","files","URL","createObjectURL","response","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","map","model","type","accept","id","htmlFor","src","alt","class","confidence","toFixed","accuracy","gradcam","original","_c","$RefreshReg$"],"sources":["C:/eye/frontend/src/components/classification/OCTClassifier.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { classifyImage } from '../../utils/api';\r\nimport GradCAMVisualization from './GradCAMVisualization'; // Updated import path\r\n\r\nconst OCTClassifier = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedModel, setSelectedModel] = useState('mobilenet_v3');\r\n\r\n  const models = [\r\n    'mobilenet_v3',\r\n    'efficientnet_b0',\r\n    'squeezenet1_1',\r\n    'resnet50',\r\n    'resnet18',\r\n    'mobilevit'\r\n  ];\r\n\r\n  const handleImageUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setSelectedFile(file);\r\n      setPreview(URL.createObjectURL(file));\r\n      setError(null);\r\n      \r\n      try {\r\n        setLoading(true);\r\n        const response = await classifyImage(file, selectedModel);\r\n        setResult(response);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError(err.message || 'Error processing image');\r\n        setResult(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">OCT Image Classification</h2>\r\n      \r\n      <div className=\"mb-4\">\r\n        <select\r\n          value={selectedModel}\r\n          onChange={(e) => setSelectedModel(e.target.value)}\r\n          className=\"block w-full p-2 mb-4 border rounded\"\r\n        >\r\n          {models.map(model => (\r\n            <option key={model} value={model}>\r\n              {model}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n          className=\"hidden\"\r\n          id=\"file-upload\"\r\n        />\r\n        <label\r\n          htmlFor=\"file-upload\"\r\n          className=\"cursor-pointer bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n        >\r\n          Upload Image\r\n        </label>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"text-red-500 mb-4\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {loading && (\r\n        <div className=\"text-blue-500\">\r\n          Processing image...\r\n        </div>\r\n      )}\r\n\r\n      {preview && (\r\n        <div className=\"mb-4\">\r\n          <h3 className=\"text-lg font-bold\">Original Image</h3>\r\n          <img src={preview} alt=\"Preview\" className=\"max-w-md rounded shadow\" />\r\n        </div>\r\n      )}\r\n\r\n      {result && (\r\n        <div className=\"mt-4\">\r\n          <h3 className=\"text-lg font-bold\">Results</h3>\r\n          <p>Class: {result.class}</p>\r\n          <p>Confidence: {result.confidence.toFixed(2)}%</p>\r\n          {result.accuracy && (\r\n            <p>Model Accuracy: {result.accuracy.toFixed(2)}%</p>\r\n          )}\r\n          {result.gradcam && (\r\n            <GradCAMVisualization\r\n              original={preview}\r\n              gradcam={result.gradcam}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OCTClassifier;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}