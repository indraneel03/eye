{"ast":null,"code":"import axios from 'axios';\n\n// API configuration\nconst API_CONFIG = {\n  baseURL: 'http://127.0.0.1:5000/api',\n  timeout: 30000,\n  // 30 seconds timeout\n  headers: {\n    'Accept': 'application/json'\n  }\n};\n\n// Create axios instance\nconst apiClient = axios.create(API_CONFIG);\n\n// Add a request interceptor for handling errors\napiClient.interceptors.request.use(config => {\n  // Do something before request is sent\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response$data;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An unexpected error occurred';\n  return Promise.reject(new Error(message));\n});\n\n// API functions\nexport const classifyImage = async (file, modelName = 'mobilenet_v3') => {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('model_name', modelName);\n    const response = await apiClient.post('/classify', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return {\n      class: response.data.class,\n      confidence: response.data.confidence,\n      gradcam: response.data.gradcam,\n      original: response.data.original\n    };\n  } catch (error) {\n    console.error('Classification error:', error);\n    throw error;\n  }\n};\n\n// Health check function\nexport const checkApiHealth = async () => {\n  try {\n    const response = await apiClient.get('/health');\n    return response.data;\n  } catch (error) {\n    console.error('Health check failed:', error);\n    throw error;\n  }\n};\n\n// Get available models\nexport const getAvailableModels = async () => {\n  try {\n    const response = await apiClient.get('/models');\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch models:', error);\n    throw error;\n  }\n};\n\n// Utility function to handle errors\nexport const handleApiError = error => {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    return {\n      message: error.response.data.error || 'Server error',\n      status: error.response.status\n    };\n  } else if (error.request) {\n    // The request was made but no response was received\n    return {\n      message: 'No response from server. Please check if the server is running.',\n      status: 503\n    };\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    return {\n      message: error.message || 'An unexpected error occurred',\n      status: 500\n    };\n  }\n};\n\n// Environment-specific configuration\nconst isDevelopment = process.env.NODE_ENV === 'development';\nif (isDevelopment) {\n  // Log API calls in development\n  apiClient.interceptors.request.use(request => {\n    console.log('Starting Request:', request);\n    return request;\n  });\n  apiClient.interceptors.response.use(response => {\n    console.log('Response:', response);\n    return response;\n  });\n}\nexport default {\n  classifyImage,\n  checkApiHealth,\n  getAvailableModels,\n  handleApiError\n};","map":{"version":3,"names":["axios","API_CONFIG","baseURL","timeout","headers","apiClient","create","interceptors","request","use","config","error","Promise","reject","response","_error$response","_error$response$data","message","data","Error","classifyImage","file","modelName","formData","FormData","append","post","class","confidence","gradcam","original","console","checkApiHealth","get","getAvailableModels","handleApiError","status","isDevelopment","process","env","NODE_ENV","log"],"sources":["C:/eye/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API configuration\r\nconst API_CONFIG = {\r\n  baseURL: 'http://127.0.0.1:5000/api',\r\n  timeout: 30000, // 30 seconds timeout\r\n  headers: {\r\n    'Accept': 'application/json',\r\n  }\r\n};\r\n\r\n// Create axios instance\r\nconst apiClient = axios.create(API_CONFIG);\r\n\r\n// Add a request interceptor for handling errors\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    // Do something before request is sent\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    const message = error.response?.data?.error || 'An unexpected error occurred';\r\n    return Promise.reject(new Error(message));\r\n  }\r\n);\r\n\r\n// API functions\r\nexport const classifyImage = async (file, modelName = 'mobilenet_v3') => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('model_name', modelName);\r\n\r\n    const response = await apiClient.post('/classify', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n\r\n    return {\r\n      class: response.data.class,\r\n      confidence: response.data.confidence,\r\n      gradcam: response.data.gradcam,\r\n      original: response.data.original\r\n    };\r\n  } catch (error) {\r\n    console.error('Classification error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Health check function\r\nexport const checkApiHealth = async () => {\r\n  try {\r\n    const response = await apiClient.get('/health');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Health check failed:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get available models\r\nexport const getAvailableModels = async () => {\r\n  try {\r\n    const response = await apiClient.get('/models');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Failed to fetch models:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Utility function to handle errors\r\nexport const handleApiError = (error) => {\r\n  if (error.response) {\r\n    // The request was made and the server responded with a status code\r\n    // that falls out of the range of 2xx\r\n    return {\r\n      message: error.response.data.error || 'Server error',\r\n      status: error.response.status\r\n    };\r\n  } else if (error.request) {\r\n    // The request was made but no response was received\r\n    return {\r\n      message: 'No response from server. Please check if the server is running.',\r\n      status: 503\r\n    };\r\n  } else {\r\n    // Something happened in setting up the request that triggered an Error\r\n    return {\r\n      message: error.message || 'An unexpected error occurred',\r\n      status: 500\r\n    };\r\n  }\r\n};\r\n\r\n// Environment-specific configuration\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nif (isDevelopment) {\r\n  // Log API calls in development\r\n  apiClient.interceptors.request.use(request => {\r\n    console.log('Starting Request:', request);\r\n    return request;\r\n  });\r\n\r\n  apiClient.interceptors.response.use(response => {\r\n    console.log('Response:', response);\r\n    return response;\r\n  });\r\n}\r\n\r\nexport default {\r\n  classifyImage,\r\n  checkApiHealth,\r\n  getAvailableModels,\r\n  handleApiError\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}